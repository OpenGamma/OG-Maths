/**
 * Copyright (C) 2013 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */

#include <iostream>
#include "numeric.hh"
#include "expression.hh"
#include "terminal.hh"

using namespace std;

namespace librdag
{

/*
 * Non-autogenerated OGNumeric methods
 */

OGNumeric::~OGNumeric()
{
}

pCOPY
OGNumeric::asCOPY() const
{
  return pCOPY{};
}

pSELECTRESULT
OGNumeric::asSELECTRESULT() const
{
  return pSELECTRESULT{};
}

pNORM2
OGNumeric::asNORM2() const
{
  return pNORM2{};
}

pPINV
OGNumeric::asPINV() const
{
  return pPINV{};
}

pINV
OGNumeric::asINV() const
{
  return pINV{};
}

pTRANSPOSE
OGNumeric::asTRANSPOSE() const
{
  return pTRANSPOSE{};
}

pCTRANSPOSE
OGNumeric::asCTRANSPOSE() const
{
  return pCTRANSPOSE{};
}

pSVD
OGNumeric::asSVD() const
{
  return pSVD{};
}

pMTIMES
OGNumeric::asMTIMES() const
{
  return pMTIMES{};
}

pLU
OGNumeric::asLU() const
{
  return pLU{};
}

pOGExpr
OGNumeric::asOGExpr() const
{
  return pOGExpr{};
}

pOGTerminal
OGNumeric::asOGTerminal() const
{
  return pOGTerminal{};
}

pOGRealScalar
OGNumeric::asOGRealScalar() const
{
  return pOGRealScalar{};
}

pOGComplexScalar
OGNumeric::asOGComplexScalar() const
{
  return pOGComplexScalar{};
}

pOGIntegerScalar
OGNumeric::asOGIntegerScalar() const
{
  return pOGIntegerScalar{};
}

pOGRealMatrix
OGNumeric::asOGRealMatrix() const
{
  return pOGRealMatrix{};
}

pOGComplexMatrix
OGNumeric::asOGComplexMatrix() const
{
  return pOGComplexMatrix{};
}

pOGLogicalMatrix
OGNumeric::asOGLogicalMatrix() const
{
  return pOGLogicalMatrix{};
}

pOGRealDiagonalMatrix
OGNumeric::asOGRealDiagonalMatrix() const
{
  return pOGRealDiagonalMatrix{};
}

pOGComplexDiagonalMatrix
OGNumeric::asOGComplexDiagonalMatrix() const
{
  return pOGComplexDiagonalMatrix{};
}

pOGRealSparseMatrix
OGNumeric::asOGRealSparseMatrix() const
{
  return pOGRealSparseMatrix{};
}

pOGComplexSparseMatrix
OGNumeric::asOGComplexSparseMatrix() const
{
  return pOGComplexSparseMatrix{};
}

ExprType_t OGNumeric::getType() const
{
  return UNKNOWN_EXPR_ENUM;
}


} // namespace librdag
