/**
 * Copyright (C) 2014 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
// NOTE: This code is autogenerated, see src/generator/scripts/testgen.m
 
#include "gtest/gtest.h"
#include "terminal.hh"
#include "execution.hh"
#include "dispatch.hh"
#include "testnodes.hh"

using namespace std;
using namespace librdag;
using namespace testnodes;
using ::testing::TestWithParam;
using ::testing::Values;

/**
 * Check SUMCOLS node behaves
 */

UNARY_NODE_TEST_SETUP(SUMCOLS)

INSTANTIATE_NODE_TEST_CASE_P(SUMCOLSTests,SUMCOLS,
Values
(
  // sumcols(real scalar of dimension: 1x1)
  new CheckUnary<SUMCOLS>
  (
    OGRealScalar::create(-6.25),
    OGRealScalar::create(-6.25),
    MATHSEQUAL
  ),
  // sumcols(real matrix of dimension: 1x1)
  new CheckUnary<SUMCOLS>
  (
    OGRealDenseMatrix::create({{-6.25}}),
    OGRealScalar::create(-6.25),
    MATHSEQUAL
  ),
  // sumcols(real row vector of dimension: 1x11)
  new CheckUnary<SUMCOLS>
  (
    OGRealDenseMatrix::create({{-6.25,-5.0,-3.75,-2.5,-1.25,0.0,1.25,2.5,3.75,5.0,6.25}}),
    OGRealDenseMatrix::create({{-6.25,-5.0,-3.75,-2.5,-1.25,0.0,1.25,2.5,3.75,5.0,6.25}}),
    MATHSEQUAL
  ),
  // sumcols(real column vector of dimension: 8x1)
  new CheckUnary<SUMCOLS>
  (
    OGRealDenseMatrix::create({{-3.25},{-2.0},{-0.75},{0.5},{1.75},{3.0},{4.25},{5.5}}),
    OGRealScalar::create(9),
    MATHSEQUAL
  ),
  // sumcols(real matrix of dimension: 4x3)
  new CheckUnary<SUMCOLS>
  (
    OGRealDenseMatrix::create( {{1.0,2.0,3.0},{4.0,5.0,6.0},{7.0,8.0,9.0},{10.0,11.0,12.0}}),
    OGRealDenseMatrix::create({{22.0,26.0,30.0}}),
    MATHSEQUAL
  ),
  // sumcols(complex scalar of dimension: 1x1)
  new CheckUnary<SUMCOLS>
  (
    OGComplexScalar::create({-6.25,12.7}),
    OGComplexScalar::create({-6.25,12.7}),
    MATHSEQUAL
  ),
  // sumcols(complex matrix of dimension: 1x1)
  new CheckUnary<SUMCOLS>
  (
    OGComplexDenseMatrix::create({{{-6.25,12.7}}}),
    OGComplexScalar::create({-6.25,12.7}),
    MATHSEQUAL
  ),
  // sumcols(complex row vector of dimension: 1x11)
  new CheckUnary<SUMCOLS>
  (
    OGComplexDenseMatrix::create({{{-6.25,-3.7},{-10.0,-5.9},{-7.50,-4.50},{-5.0,-3.0},{-2.50,-1.50},{0.0,0.0},{2.50,1.50},{5.0,3.0},{7.50,4.50},{10.0,5.9},{12.50,7.4}}}),
    OGComplexDenseMatrix::create({{{-6.25,-3.7},{-10.0,-5.9},{-7.50,-4.50},{-5.0,-3.0},{-2.50,-1.50},{0.0,0.0},{2.50,1.50},{5.0,3.0},{7.50,4.50},{10.0,5.9},{12.50,7.4}}}),
    MATHSEQUAL
  ),
  // sumcols(complex column vector of dimension: 8x1)
  new CheckUnary<SUMCOLS>
  (
    OGComplexDenseMatrix::create({{{-3.25,0.20}},{{-2.0,7.2}},{{-0.75,4.3}},{{0.50,8.4}},{{1.75,2.7}},{{3.0,6.6}},{{4.25,2.2}},{{5.50,7.50}}}),
    OGComplexScalar::create({9,39.1}),
    MATHSEQUAL
  ),
  // sumcols(complex matrix of dimension: 4x3)
  new CheckUnary<SUMCOLS>
  (
    OGComplexDenseMatrix::create( {{{1.0,4.0},{2.0,-4.0},{3.0,-5.0}},{{4.0,-1.0},{5.0,-3.0},{6.0,-2.0}},{{7.0,0.0},{8.0,-2.0},{9.0,-2.0}},{{10.0,-4.0},{11.0,-4.0},{12.0,0.0}}}),
    OGComplexDenseMatrix::create({{{22.0,-1.0},{26.0,-13.0},{30.0,-9.0}}}),
    MATHSEQUAL
  )
)

);


