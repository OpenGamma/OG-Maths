/**
 * Copyright (C) 2014 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
// NOTE: This code is autogenerated, see src/generator/scripts/testgen.m
 
#include "gtest/gtest.h"
#include "terminal.hh"
#include "execution.hh"
#include "dispatch.hh"
#include "testnodes.hh"

using namespace std;
using namespace librdag;
using namespace testnodes;
using ::testing::TestWithParam;
using ::testing::Values;

/**
 * Check SUMROWS node behaves
 */

UNARY_NODE_TEST_SETUP(SUMROWS)

INSTANTIATE_NODE_TEST_CASE_P(SUMROWSTests,SUMROWS,
Values
(
  // sumrows(real scalar of dimension: 1x1)
  new CheckUnary<SUMROWS>
  (
    OGRealScalar::create(-6.25),
    OGRealScalar::create(-6.25),
    MATHSEQUAL
  ),
  // sumrows(real matrix of dimension: 1x1)
  new CheckUnary<SUMROWS>
  (
    OGRealDenseMatrix::create({{-6.25}}),
    OGRealScalar::create(-6.25),
    MATHSEQUAL
  ),
  // sumrows(real row vector of dimension: 1x8)
  new CheckUnary<SUMROWS>
  (
    OGRealDenseMatrix::create({{-3.25,-2.0,-0.75,0.5,1.75,3.0,4.25,5.5}}),
    OGRealScalar::create(9),
    MATHSEQUAL
  ),
  // sumrows(real column vector of dimension: 8x1)
  new CheckUnary<SUMROWS>
  (
    OGRealDenseMatrix::create({{-3.25},{-2.0},{-0.75},{0.5},{1.75},{3.0},{4.25},{5.5}}),
    OGRealDenseMatrix::create({{-3.25},{-2.0},{-0.75},{0.5},{1.75},{3.0},{4.25},{5.5}}),
    MATHSEQUAL
  ),
  // sumrows(real matrix of dimension: 4x3)
  new CheckUnary<SUMROWS>
  (
    OGRealDenseMatrix::create( {{1.0,2.0,3.0},{4.0,5.0,6.0},{7.0,8.0,9.0},{10.0,11.0,12.0}}),
    OGRealDenseMatrix::create({{6.0},{15.0},{24.0},{33.0}}),
    MATHSEQUAL
  ),
  // sumrows(complex scalar of dimension: 1x1)
  new CheckUnary<SUMROWS>
  (
    OGComplexScalar::create({-6.25,12.7}),
    OGComplexScalar::create({-6.25,12.7}),
    MATHSEQUAL
  ),
  // sumrows(complex matrix of dimension: 1x1)
  new CheckUnary<SUMROWS>
  (
    OGComplexDenseMatrix::create({{{-6.25,12.7}}}),
    OGComplexScalar::create({-6.25,12.7}),
    MATHSEQUAL
  ),
  // sumrows(complex row vector of dimension: 1x8)
  new CheckUnary<SUMROWS>
  (
    OGComplexDenseMatrix::create({{{-3.25,0.0},{-2.0,7.0},{-0.75,9.0},{0.50,2.0},{1.75,4.0},{3.0,6.0},{4.25,6.0},{5.50,3.0}}}),
    OGComplexScalar::create({9,37.0}),
    MATHSEQUAL
  ),
  // sumrows(complex column vector of dimension: 8x1)
  new CheckUnary<SUMROWS>
  (
    OGComplexDenseMatrix::create({{{-3.25,0.0}},{{-2.0,7.0}},{{-0.75,9.0}},{{0.50,2.0}},{{1.75,4.0}},{{3.0,6.0}},{{4.25,6.0}},{{5.50,3.0}}}),
    OGComplexDenseMatrix::create({{{-3.25,0.0}},{{-2.0,7.0}},{{-0.75,9.0}},{{0.50,2.0}},{{1.75,4.0}},{{3.0,6.0}},{{4.25,6.0}},{{5.50,3.0}}}),
    MATHSEQUAL
  ),
  // sumrows(complex matrix of dimension: 4x3)
  new CheckUnary<SUMROWS>
  (
    OGComplexDenseMatrix::create({{{1.0,-1.0},{2.0,-5.0},{3.0,4.0}},{{4.0,3.0},{5.0,-2.0},{6.0,3.0}},{{7.0,0.0},{8.0,1.0},{9.0,0.0}},{{10.0,-3.0},{11.0,2.0},{12.0,0.0}}}),
    OGComplexDenseMatrix::create({{{6.0,-2.0}},{{15.0,4.0}},{{24.0,1.0}},{{33.0,-1.0}}}),
    MATHSEQUAL
  )
)

);


